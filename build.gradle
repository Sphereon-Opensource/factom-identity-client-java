plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
}

group 'org.factomprotocol.identity'
version '0.3.0-SNAPSHOT'

ext {
    // the password needs to be specified via command line
    /*repoUser = project.hasProperty('repoUser') ? project.getProperty('repoUser') : credentials.nexusUser
    repoPass = project.hasProperty('repoPass') ? project.getProperty('repoPass') : credentials.nexusPassword*/
}

sourceCompatibility = 8
repositories {
    mavenLocal()
    google()
    jcenter()
    mavenCentral()
    maven {
        url "https://nexus.qa.sphereon.com/repository/sphereon-opensource-releases"
    }
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

}


allprojects {
    apply plugin: "maven"
    group = "org.factomprotocol.identity"

    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://nexus.qa.sphereon.com/repository/sphereon-opensource-releases"
        }
        maven {
            url "https://nexus.qa.sphereon.com/repository/sphereon-opensource-snapshots"
        }

    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {


                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Sphereon'
                        name = 'Sphereon BV'
                        email = 'dev@sphereon.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/Sphereon-Opensource/factom-identity-java.git'
                    developerConnection = 'scm:git:https://github.com/Sphereon-Opensource/factom-identity-java.git'
                    url = 'https://github.com/Sphereon-Opensource/factom-identity-java/'
                }
            }
        }
    }


    repositories {
        maven {
            def releasesRepoUrl = "https://nexus.qa.sphereon.com/repository/sphereon-opensource-releases"
            def snapshotsRepoUrl = "https://nexus.qa.sphereon.com/repository/sphereon-opensource-snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            /*credentials {
                username project.repoUser
                password project.repoPass
            }*/
        }
        mavenLocal()
    }
}


dependencies {
    compile 'org.blockchain-innovation.factom.client:factom-client-api:0.3.0-SNAPSHOT'
    compile 'org.blockchain-innovation.factom.client:factom-client-impl:0.3.0-SNAPSHOT'
    compile 'org.blockchain-innovation.factom.client:factom-client-offline-signing:0.3.0-SNAPSHOT'
    compile group: 'decentralized-identity', name: 'did-common-java', version: '0.2-SNAPSHOT'
    compile "javax.json.bind:javax.json.bind-api:1.0.0-RC2"
    compile 'net.i2p.crypto:eddsa:0.3.0'
    testCompile group: 'org.factomprotocol.identity', name: 'factom-did-models-java-gson', version: '0.3.0-SNAPSHOT'
    testCompile 'org.blockchain-innovation.factom.client:logger-slf4j:0.3.0-SNAPSHOT'
    testCompile 'org.blockchain-innovation.factom.client:json-converter-gson:0.3.0-SNAPSHOT'
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.1")
}
test {
    useJUnitPlatform()
}
